# Formato del documento:
# Las claves de los mensajes en este documento tendrán el formato de:
# (conjunto paquete.)[clase].[metodo]
# (.especificacion si es necesitario distinguir métodos iguales con diferente parámetro)
# (.especificacion si hay mas de un is)
# Solo se aplicarán minúsculas y snake case para el nombrado
#
# Cada conjunto de mensajes tendrá un comentario encima para globalizar donde se encuentran

# Document format: 
# Message keys in this document will have the format: 
# (package set.)[class].[method] 
# (.specification if it is necessary to distinguish equal methods with different parameters) 
# (.specification if there is more than one is) 
# Only lowercase and snake case will be applied to the named 
# 
# Each message set will have a comment above it to globalize where they are found

error_format_message=Invalid message format. Please ensure your input matches the required structure.
default_message=[NOT FOUND MESSAGE] Check the property "%s"

# Collections

    # Collections.Graph

    collections.graph.is_empty=Graph isn't empty
    collections.graph.is_tree=Graph isn't a tree
    collections.graph.is_binary_tree=Graph isn't a binary tree
    collections.graph.is_directed=Graph isn't directed
    collections.graph.is_connected=Graph isn't connected
    collections.graph.has_cycle=Graph has a cycle
    collections.graph.constains_node=Graph doesn't contain node '%s'
    collections.graph.contains_edge=Graph doesn't contain edge '%s'
    collections.graph.any_nodes_match=No nodes match the condition '%s'
    collections.graph.all_nodes_match=Not all nodes match the condition '%s'
    collections.graph.any_edges_match=No edges match the condition '%s'
    collections.graph.all_edges_match=Not all edges match the condition '%s'
    collections.graph.has_patch=Graph doesn't have patch '%s'
    collections.graph.min_nodes=Graph has fewer nodes (%d) than the minimum (%d)
    collections.graph.max_nodes=Graph has more nodes (%d) than the maximum (%d)
    collections.graph.in_range_nodes=Graph nodes count (%d) not in range [%d, %d]
    collections.graph.min_edges=Graph has fewer edges (%d) than the minimum (%d)
    collections.graph.max_edges=Graph has more edges (%d) than the maximum (%d)
    collections.graph.in_range_edges=Graph edges count (%d) not in range [%d, %d]
    collections.graph.min_weight=Graph has edges with weight less (%f) than minimum (%f)
    collections.graph.max_weight=Graph has edges with weight more (%f) than maximum (%f)
    collections.graph.in_range_weight=Graph edge weights (%f) not in range [%f, %f]

    # Collections.List

    collections.list.is_empty=List isnt empty
    collections.list.any_match=Any list element matches the predicate 
    collections.list.all_match=Not all list element match the predicate 
    collections.list.all_distinct=Not all list element are distinct
    collections.list.is_subset=List isnt subset
    collections.list.is_superset=List isnt superset
    collections.list.is_sufficient_percentage=At least %.2f%% of the elements must satisfy the condition

    # Collections.Map

    collections.map.is_empty=Map isnt empty
    collections.map.any_match=Any map element matches the predicate 
    collections.map.all_match=All map element doesnt match the predicate 

    # Collections.Set

    collections.set.is_empty=Set isnt empty
    collections.set.any_match=Any set element matches the predicate 
    collections.set.all_match=All set element doesnt match the predicate 
    collections.set.is_subset=Set isnt subset
    collections.set.is_superset=Set isnt superset
    collections.set.is_sufficient_percentage=At least %.2f%% of the elements must satisfy the condition

    # Collections.Tree

    collections.tree.is_empty=Tree isnt empty    
    collections.tree.is_binary_tree=Tree isnt binary tree
    collections.tree.is_symmetric=Tree isnt symmetric
    collections.tree.is_full=Tree isnt full
    collections.tree.min_depth=Tree depth (%d) is less than the minimum required (%d)
    collections.tree.max_depth=Tree depth (%d) exceeds the maximum allowed (%d)
    collections.tree.in_range_depth=Tree depth (%d) is not within the required range (%d - %d)
    collections.tree.min_leaves=Tree has %d leaves, fewer than the minimum required (%d)
    collections.tree.max_leaves=Tree has %d leaves, more than the maximum allowed (%d)
    collections.tree.in_range_leaves=Tree has %d leaves, not within the required range (%d - %d)
    collections.tree.min_diameter=Tree diameter (%d) is less than the minimum required (%d)
    collections.tree.max_diameter=Tree diameter (%d) exceeds the maximum allowed (%d)
    collections.tree.in_range_diameter=Tree diameter (%d) is not within the required range (%d - %d)

# IO

    # File

    io.file.exists=File doesnt exists
    io.file.is_type_file=File isnt type file
    io.file.is_type_directory=File isnt type directory
    io.file.is_type_hidden=File isnt type hidden
    io.file.can_read=File cant be read
    io.file.can_write=File cant be written
    io.file.min=File length less than %d
    io.file.max=File length greater than %d
    io.file.in_range=File length isnt in range %d to %d

    # Json

    io.json.has_property=Path %s: JSON does not contain the required property "%s"
    io.json.is_array=Path %s: JSON value is not an array
    io.json.is_big_decimal=Path %s: JSON value is not a BigDecimal
    io.json.is_big_integer=Path %s: JSON value is not a BigInteger
    io.json.is_binary=Path %s: JSON value is not binary
    io.json.is_boolean=Path %s: JSON value is not a boolean
    io.json.is_container_node=Path %s: JSON node is not a container
    io.json.is_double=Path %s: JSON value is not a double
    io.json.is_empty=Path %s: JSON node is not empty
    io.json.is_float=Path %s: JSON value is not a float
    io.json.is_floating_point_number=Path %s: JSON value is not a floating-point number
    io.json.is_int=Path %s: JSON value is not an int
    io.json.is_integeral_number=Path %s: JSON value is not an integral number
    io.json.is_long=Path %s: JSON value is not a long
    io.json.is_missing_node=Path %s: JSON node is missing
    io.json.is_null=Path %s: JSON value is not null
    io.json.is_number=Path %s: JSON value is not a number
    io.json.is_object=Path %s: JSON value is not an object
    io.json.is_pojo=Path %s: JSON value is not a POJO
    io.json.is_short=Path %s: JSON value is not a short
    io.json.is_textual=Path %s: JSON value is not textual (string)
    io.json.is_in_range=Path %s: JSON value %s is not within the range [%d - %d]
    io.json.matches_regex=Path %s: JSON value "%s" does not match the regex "%s"
    io.json.is_in_enum=Path %s: JSON value "%s" is not one of the allowed enum values: %s
    io.json.has_length_between=Path %s: JSON textual value has length %d, which is not within the required range [%d - %d]

    # URI

    io.uri.is_absolute=URI %s is not absolute
    io.uri.is_relative=URI %s is not relative
    io.uri.has_squeme=URI %s does not have a scheme
    io.uri.has_squeme.param=URI %s scheme is not one of the expected values: %s
    io.uri.has_host=URI %s does not have a host
    io.uri.has_host.param=URI %s host is not one of the expected values: %s
    io.uri.has_port=URI %s does not have a port
    io.uri.has_port.port=URI %s port is not one of the expected values: %s
    io.uri.has_authority=URI %s does not have an authority
    io.uri.has_authority.param=URI %s authority is not one of the expected values: %s
    io.uri.has_fragment=URI %s does not have a fragment
    io.uri.has_fragment.param=URI %s fragment is not one of the expected values: %s
    io.uri.has_path=URI %s does not have a path
    io.uri.has_path.param=URI %s path is not one of the expected values: %s
    io.uri.has_query=URI %s does not have a query
    io.uri.has_query.param=URI %s query is not one of the expected values: %s

# Lambda

    # BiConsumer

    lambda.biconsumer.apply_without_exception=BiConsumer threw an exception when applied to inputs
    lambda.biconsumer.apply_without_exception.collection=BiConsumer threw an exception when applied to inputs for collection
    lambda.biconsumer.modifies_input=BiConsumer did not modify inputs (%s, %s)
    lambda.biconsumer.modifies_input.collection=BiConsumer did not modify inputs as expected for collection
    lambda.biconsumer.does_nothing=BiConsumer unexpectedly modified inputs (%s, %s)
    lambda.biconsumer.does_nothing.collection=BiConsumer unexpectedly modified inputs for collection

    # BiFunction

    lambda.bifunction.apply_without_exception=BiFunction threw an exception when applied to inputs (%s, %s)
    lambda.bifunction.produces_expected=BiFunction produced %s for inputs (%s, %s), but expected %s
    lambda.bifunction.produces_non_null=BiFunction produced null for inputs (%s, %s)

    # BiPredicate

    lambda.bipredicate.test_without_exception=BiPredicate threw an exception when tested with inputs (%s, %s)
    lambda.bipredicate.evaluates_true=BiPredicate evaluated to false for inputs (%s, %s), but true was expected
    lambda.bipredicate.evaluates_false=BiPredicate evaluated to true for inputs (%s, %s), but false was expected
    lambda.bipredicate.produces_expected=BiPredicate evaluated to %b for inputs (%s, %s), but expected %b

    # Callable

    lambda.callable.call_without_exception=Callable threw an exception when called
    lambda.callable.produces_expected=Callable produced %s, but expected %s
    lambda.callable.produces_non_null=Callable produced null

    # Consumer

    lambda.consumer.apply_without_exception=Consumer threw an exception when applied to input %s
    lambda.consumer.apply_without_exception.collection=Consumer threw an exception when applied to collection %s
    lambda.consumer.modifies_input=Consumer did not modify input as expected: %s
    lambda.consumer.modifies_input.collection=Consumer did not modify collection as expected: %s
    lambda.consumer.does_nothing=Consumer unexpectedly modified input: %s
    lambda.consumer.does_nothing.collection=Consumer unexpectedly modified collection: %s

    # Function

    lambda.function.apply_without_exception=Function threw an exception when applied to input %s
    lambda.function.produces_expected=Function produced %s for input %s, but expected %s
    lambda.function.produces_non_null=Function produced null for input %s
    
    # Predicate

    lambda.predicate.test_without_exception=Predicate threw an exception when tested with input %s
    lambda.predicate.evaluates_true=Predicate evaluated to false for input %s, but true was expected
    lambda.predicate.evaluates_false=Predicate evaluated to true for input %s, but false was expected
    lambda.predicate.produces_expected=Predicate evaluated to %s for input %s, but expected %s

    # Runnable

    lambda.runnable.run_without_exception=Runnable run with exception

    # Supplier

    lambda.supplier.apply_without_exception=Supplier threw exception
    lambda.supplier.produces_expected=Supplier doesnt produce expected result (%s)
    lambda.supplier.produces_non_null=Supplier produce null

# Math

    # Math.Numbers

        math.numbers.is_positive=%s isnt positive
        math.numbers.is_positive_or_zero=%s isnt positive or zero
        math.numbers.is_negative=%s isnt negative
        math.numbers.is_negative_or_zero=%s isnt positive
        math.numbers.is_zero=%s isnt zero
        math.numbers.is_greater_than=%s isnt greater than %d
        math.numbers.is_greater_or_equal_than=%s isnt greater or equal than %d
        math.numbers.is_less_than=%s isnt less than %d
        math.numbers.is_less_or_equal_than=%s isnt less or equal than %d

            # Math.Numbers.IntegerTypes

            math.numbers.integer_types.is_odd=%s isnt odd
            math.numbers.integer_types.is_even=%s isnt even

            # Math.Numbers.DecimalTypes

            math.numbers.decimal_types.is_nan=%s isnt NaN
            math.numbers.decimal_types.is_infinite=%s isnt infinite


    # Math.Array

    math.array.is_empty=Array isnt empty
    math.array.is_sorted_asc=Array isnt in ascendent natural order 
    math.array.is_sorted_asc.comparator=Array isnt in ascendent order by comparator
    math.array.is_sorted_desc=Array isnt in descendent natural order
    math.array.is_sorted_desc.comparator=Array isnt in descendent order by comparator
    math.array.comparator=%s doesnt implement Comparable
    math.array.any_match=Any array element of %s matches the predicate 
    math.array.all_match=All array element of %s doesnt match the predicate 

    # Math.Matrix

    math.matrix.is_empty=Matrix is not empty
    math.matrix.is_square=Matrix is not square
    math.matrix.is_zero=Matrix is not a zero matrix
    math.matrix.is_identity=Matrix is not an identity matrix
    math.matrix.is_symmetric=Matrix is not symmetric
    math.matrix.is_diagonal=Matrix is not diagonal
    math.matrix.is_orthogonal=Matrix is not orthogonal
    math.matrix.is_invertible=Matrix is not invertible
    math.matrix.is_positive_definite=Matrix is not positive definite
    math.matrix.is_upper_triangular=Matrix is not upper triangular
    math.matrix.is_lower_triangular=Matrix is not lower triangular
    math.matrix.has_rank=Matrix rank is not %d
    math.matrix.has_real_eigenvalues=Matrix has non-real eigenvalues
    math.matrix.is_full_rank=Matrix is not full rank
    math.matrix.any_match=No element in matrix satisfies the predicate
    math.matrix.all_match=Not all elements in matrix satisfy the predicate

# Time

    # Time.Temporal

    time.temporal.is_before=%s is not before %s
    time.temporal.is_before_or_equal=%s is not before or equal to %s
    time.temporal.is_after=%s is not after %s
    time.temporal.is_after_or_equal=%s is not after or equal to %s
    time.temporal.in_range=%s is not in range [%s, %s]
    time.temporal.is_past=%s is not in the past
    time.temporal.is_future=%s is not in the future

        # Time.Temporal.Date

        # Time.Temporal.LocalDate

        time.temporal.local_date.is_past_or_present=%s is not in the past or present
        time.temporal.local_date.is_future_or_present=%s is not in the future or present
        
        # Time.Temporal.LocalDateTime
        
        # Time.Temporal.LocalTime

    # Time.Duration

    time.duration.is_positive=Duration %s is not positive
    time.duration.is_negative=Duration %s is not negative
    time.duration.is_zero=Duration %s is not zero
    time.duration.is_greater_than=Duration %s is not greater than %s
    time.duration.is_greater_or_equal_than=Duration %s is not greater or equal than %s
    time.duration.is_less_than=Duration %s is not less than %s
    time.duration.is_less_or_equal_than=Duration %s is not less or equal than %s
    time.duration.is_equal=Duration %s is not equal to %s

    # Time.Period

    time.period.is_positive=Period %s is not positive
    time.period.is_negative=Period %s is not negative
    time.period.is_zero=Period %s is not zero
    time.period.is_greater_than=Period %s is not greater than %s
    time.period.is_greater_or_equal_than=Period %s is not greater or equal than %s
    time.period.is_less_than=Period %s is not less than %s
    time.period.is_less_or_equal_than=Period %s is not less or equal than %s
    time.period.is_equal=Period %s is not equal to %s

# Color

color.is_black=Color %s is not black
color.is_white=Color %s is not white
color.is_gray=Color %s is not gray
color.is_dark=Color %s is not dark enough (threshold: %s)
color.is_light=Color %s is not light enough (threshold: %s)
color.is_transparent=Color %s is not transparent
color.has_contrast=Color %s does not have enough contrast with %s (threshold: %s)
color.has_alpha=Color %s does not have alpha %s
color.is_desaturated=Color %s is not desaturated enough (threshold: %s)
color.is_similar=Color %s is not similar to %s (threshold: %s)
color.is_opaque=Color %s is not opaque
color.has_hexadecimal=Color %s does not have hex %s

# Currency

currency.has_symbol=Currency %s does not have symbol %s
currency.has_symbol.locale=Currency %s does not have symbol %s in locale %s
currency.with_default_fraction_digits=Currency %s does not have default fraction digits %s
currency.is_from=Currency %s is not from locale %s

# String

string.is_empty=String isnt empty
string.is_blank=String isnt blank
string.min=String length less than %d
string.max=String length greater than %d
string.in_range=String length isnt in range %d to %d
string.is_equals_ignore_case=String isnt equals to %s ignoring case 
string.contains=String doesnt contain %s
string.starts_with=String doesnt start with %s 
string.ends_with=String doesnt end with %s
string.matches=String doesnt match with the regex "%s"
string.is_digit=String isnt a digit
string.is_palindrome=String isnt a palindrome

# Abstract Checker

abstract_checker.is=Object doesnt match the condition
abstract_checker.is_not=Object match the condition
abstract_checker.is_null=Object isnt null
abstract_checker.is_non_null=Object is null
abstract_checker.is_equal=Object isnt equal

# Checker

checker.is_instance=Object is not an instance of %s
checker.is_list.clazz=List contains elements that are not of type %s
checker.is_map.clazz=Map contains keys or values that are not of type %s:%s
checker.is_set.clazz=Set contains elements that are not of type %s
checker.is_array=Object is not an array
checker.is_array.clazz=Array contains elements that are not of type %s
checker.is_matrix=Object is not a matrix
checker.is_matrix.clazz=Matrix contains elements that are not of type %s

